{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templateBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base uri for nested templates"
      }
    },
    "vmNamespace": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for cluster"
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VMs in cluster"
      }
    },
    "vmConfig": {
      "type": "object",
      "metadata": {
        "description": "Structure with VM config"
      }
    },
    "netConfig": {
      "type": "object",
      "metadata": {
        "description": "Structure with vNet config"
      }
    }
  },
  "variables": {
    "networkApiVersion": "[parameters('netConfig').networkApiVersion]",
    "computeApiVersion": "[parameters('vmConfig').computeApiVersion]",
    "updateDomainCount": "[parameters('vmCount')]",
    "faultDomainCount": 3,
    "location": "[resourceGroup().location]",
    "configHashVm": {
      "Enabled": "[concat(parameters('templateBaseUrl'), '/vm-datadisks-enabled.json')]",
      "Disabled": "[concat(parameters('templateBaseUrl'), '/vm-datadisks-disabled.json')]"
    },
    "configHashVnet": {
      "New": "[concat(parameters('templateBaseUrl'), '/net-vnet.json')]",
      "Existing": "[concat(parameters('templateBaseUrl'), '/net-empty.json')]"
    },
    "configHashLb": {
      "External": "[concat(parameters('templateBaseUrl'), '/lb-ext.json')]",
      "Internal": "[concat(parameters('templateBaseUrl'), '/lb-int.json')]",
      "Management": "[concat(parameters('templateBaseUrl'), '/lb-mgmt.json')]",
      "None": "[concat(parameters('templateBaseUrl'), '/lb-none.json')]"
    },
    "templateUrlLb": "[variables('configHashLb')[parameters('netConfig').lbManagementOrExternalOrInternalOrNone]]",
    "templateUrlVnet": "[variables('configHashVnet')[parameters('netConfig').vNetNewOrExisting]]",
    "templateUrlVm": "[variables('configHashVm')[parameters('vmConfig').dataManagedDiskEnabledOrDisabled]]",
    "templateUrlNsg": "[concat(parameters('templateBaseUrl'), '/net-security.json')]",
    "availabilitySetName":"[concat(parameters('vmNamespace'), '-avs')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('vmNamespace'), '-deployment-vnet')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlVnet')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "templateBaseUrl": {
            "value": "[parameters('templateBaseUrl')]"
          },
          "netConfig": {
            "value": "[parameters('netConfig')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('vmNamespace'), '-deployment-lb')]",
      "dependsOn": [
        "[concat(parameters('vmNamespace'), '-deployment-nsg')]",
        "[concat(parameters('vmNamespace'), '-deployment-vnet')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlLb')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "templateBaseUrl": {
            "value": "[parameters('templateBaseUrl')]"
          },
          "netConfig": {
            "value": "[parameters('netConfig')]"
          },
          "vmNamespace": {
            "value": "[parameters('vmNamespace')]"
          },
          "vmCount": {
            "value": "[parameters('vmCount')]"
          }
        }
      }
    },
    {
      "name": "[concat(parameters('vmNamespace'), '-deployment-nsg')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlNsg')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "templateBaseUrl": {
            "value": "[parameters('templateBaseUrl')]"
          },
          "secConfig": {
            "value": {
              "networkApiVersion": "[variables('networkApiVersion')]",
              "secNamespace": "[parameters('vmNamespace')]",
              "secCount": "[parameters('vmCount')]",
              "secRules": "[parameters('netConfig').networkSecurityRules]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": "[variables('updateDomainCount')]",
        "PlatformFaultDomainCount": "[variables('faultDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[concat(parameters('vmNamespace'), '-deployment-vms')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat(parameters('vmNamespace'), '-deployment-lb')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlVm')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "templateBaseUrl": {
            "value": "[parameters('templateBaseUrl')]"
          },
          "vmNamespace": {
            "value": "[parameters('vmNamespace')]"
          },
          "vmCount": {
            "value": "[parameters('vmCount')]"
          },
          "vmConfig": {
            "value": "[parameters('vmConfig')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "clusterFQDN": {
      "value": "[reference(concat(parameters('vmNamespace'), '-deployment-lb')).outputs.clusterFQDN.value]",
      "type": "string"
    }
  }
}
